# This file was @generated by getdeps.py

name: windows

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

permissions:
  contents: read  #  to fetch code (actions/checkout)

jobs:
  build:
    runs-on: windows-2019
    steps:
    - name: Export boost environment
      run: "echo BOOST_ROOT=%BOOST_ROOT_1_83_0% >> %GITHUB_ENV%"
      shell: cmd
    - name: Fix Git config
      run: >
        git config --system core.longpaths true &&
        git config --system core.autocrlf false &&
        git config --system core.symlinks true
      shell: cmd
    - uses: actions/checkout@v4
    - id: paths
      name: Query paths
      run: python build/fbcode_builder/getdeps.py query-paths --recursive --src-dir=. fizz  >> $env:GITHUB_OUTPUT
      shell: pwsh
    - name: Restore libsodium source from cache
      id: restore_source_libsodium
      if: ${{ steps.paths.outputs.libsodium_SOURCE }}
      uses: actions/cache/restore@v4
      with:
       path: ${{ steps.paths.outputs.libsodium_SOURCE }}
       key: ${{ steps.paths.outputs.libsodium_CACHE_KEY }}-source
    - name: Fetch libsodium
      if: ${{ steps.paths.outputs.libsodium_SOURCE && ! steps.restore_source_libsodium.outputs.cache-hit }}
      run: python build/fbcode_builder/getdeps.py fetch --no-tests libsodium
    - name: Save libsodium source to cache
      uses: actions/cache/save@v4
      if: ${{ steps.paths.outputs.libsodium_SOURCE && ! steps.restore_source_libsodium.outputs.cache-hit }}
      with:
       path: ${{ steps.paths.outputs.libsodium_SOURCE }}
       key: ${{ steps.paths.outputs.libsodium_CACHE_KEY }}-source
    - name: Restore ninja source from cache
      id: restore_source_ninja
      if: ${{ steps.paths.outputs.ninja_SOURCE }}
      uses: actions/cache/restore@v4
      with:
       path: ${{ steps.paths.outputs.ninja_SOURCE }}
       key: ${{ steps.paths.outputs.ninja_CACHE_KEY }}-source
    - name: Fetch ninja
      if: ${{ steps.paths.outputs.ninja_SOURCE && ! steps.restore_source_ninja.outputs.cache-hit }}
      run: python build/fbcode_builder/getdeps.py fetch --no-tests ninja
    - name: Save ninja source to cache
      uses: actions/cache/save@v4
      if: ${{ steps.paths.outputs.ninja_SOURCE && ! steps.restore_source_ninja.outputs.cache-hit }}
      with:
       path: ${{ steps.paths.outputs.ninja_SOURCE }}
       key: ${{ steps.paths.outputs.ninja_CACHE_KEY }}-source
    - name: Restore cmake source from cache
      id: restore_source_cmake
      if: ${{ steps.paths.outputs.cmake_SOURCE }}
      uses: actions/cache/restore@v4
      with:
       path: ${{ steps.paths.outputs.cmake_SOURCE }}
       key: ${{ steps.paths.outputs.cmake_CACHE_KEY }}-source
    - name: Fetch cmake
      if: ${{ steps.paths.outputs.cmake_SOURCE && ! steps.restore_source_cmake.outputs.cache-hit }}
      run: python build/fbcode_builder/getdeps.py fetch --no-tests cmake
    - name: Save cmake source to cache
      uses: actions/cache/save@v4
      if: ${{ steps.paths.outputs.cmake_SOURCE && ! steps.restore_source_cmake.outputs.cache-hit }}
      with:
       path: ${{ steps.paths.outputs.cmake_SOURCE }}
       key: ${{ steps.paths.outputs.cmake_CACHE_KEY }}-source
    - name: Restore boost source from cache
      id: restore_source_boost
      if: ${{ steps.paths.outputs.boost_SOURCE }}
      uses: actions/cache/restore@v4
      with:
       path: ${{ steps.paths.outputs.boost_SOURCE }}
       key: ${{ steps.paths.outputs.boost_CACHE_KEY }}-source
    - name: Fetch boost
      if: ${{ steps.paths.outputs.boost_SOURCE && ! steps.restore_source_boost.outputs.cache-hit }}
      run: python build/fbcode_builder/getdeps.py fetch --no-tests boost
    - name: Save boost source to cache
      uses: actions/cache/save@v4
      if: ${{ steps.paths.outputs.boost_SOURCE && ! steps.restore_source_boost.outputs.cache-hit }}
      with:
       path: ${{ steps.paths.outputs.boost_SOURCE }}
       key: ${{ steps.paths.outputs.boost_CACHE_KEY }}-source
    - name: Restore double-conversion source from cache
      id: restore_source_double-conversion
      if: ${{ steps.paths.outputs.double-conversion_SOURCE }}
      uses: actions/cache/restore@v4
      with:
       path: ${{ steps.paths.outputs.double-conversion_SOURCE }}
       key: ${{ steps.paths.outputs.double-conversion_CACHE_KEY }}-source
    - name: Fetch double-conversion
      if: ${{ steps.paths.outputs.double-conversion_SOURCE && ! steps.restore_source_double-conversion.outputs.cache-hit }}
      run: python build/fbcode_builder/getdeps.py fetch --no-tests double-conversion
    - name: Save double-conversion source to cache
      uses: actions/cache/save@v4
      if: ${{ steps.paths.outputs.double-conversion_SOURCE && ! steps.restore_source_double-conversion.outputs.cache-hit }}
      with:
       path: ${{ steps.paths.outputs.double-conversion_SOURCE }}
       key: ${{ steps.paths.outputs.double-conversion_CACHE_KEY }}-source
    - name: Restore fast_float source from cache
      id: restore_source_fast_float
      if: ${{ steps.paths.outputs.fast_float_SOURCE }}
      uses: actions/cache/restore@v4
      with:
       path: ${{ steps.paths.outputs.fast_float_SOURCE }}
       key: ${{ steps.paths.outputs.fast_float_CACHE_KEY }}-source
    - name: Fetch fast_float
      if: ${{ steps.paths.outputs.fast_float_SOURCE && ! steps.restore_source_fast_float.outputs.cache-hit }}
      run: python build/fbcode_builder/getdeps.py fetch --no-tests fast_float
    - name: Save fast_float source to cache
      uses: actions/cache/save@v4
      if: ${{ steps.paths.outputs.fast_float_SOURCE && ! steps.restore_source_fast_float.outputs.cache-hit }}
      with:
       path: ${{ steps.paths.outputs.fast_float_SOURCE }}
       key: ${{ steps.paths.outputs.fast_float_CACHE_KEY }}-source
    - name: Restore fmt source from cache
      id: restore_source_fmt
      if: ${{ steps.paths.outputs.fmt_SOURCE }}
      uses: actions/cache/restore@v4
      with:
       path: ${{ steps.paths.outputs.fmt_SOURCE }}
       key: ${{ steps.paths.outputs.fmt_CACHE_KEY }}-source
    - name: Fetch fmt
      if: ${{ steps.paths.outputs.fmt_SOURCE && ! steps.restore_source_fmt.outputs.cache-hit }}
      run: python build/fbcode_builder/getdeps.py fetch --no-tests fmt
    - name: Save fmt source to cache
      uses: actions/cache/save@v4
      if: ${{ steps.paths.outputs.fmt_SOURCE && ! steps.restore_source_fmt.outputs.cache-hit }}
      with:
       path: ${{ steps.paths.outputs.fmt_SOURCE }}
       key: ${{ steps.paths.outputs.fmt_CACHE_KEY }}-source
    - name: Restore gflags source from cache
      id: restore_source_gflags
      if: ${{ steps.paths.outputs.gflags_SOURCE }}
      uses: actions/cache/restore@v4
      with:
       path: ${{ steps.paths.outputs.gflags_SOURCE }}
       key: ${{ steps.paths.outputs.gflags_CACHE_KEY }}-source
    - name: Fetch gflags
      if: ${{ steps.paths.outputs.gflags_SOURCE && ! steps.restore_source_gflags.outputs.cache-hit }}
      run: python build/fbcode_builder/getdeps.py fetch --no-tests gflags
    - name: Save gflags source to cache
      uses: actions/cache/save@v4
      if: ${{ steps.paths.outputs.gflags_SOURCE && ! steps.restore_source_gflags.outputs.cache-hit }}
      with:
       path: ${{ steps.paths.outputs.gflags_SOURCE }}
       key: ${{ steps.paths.outputs.gflags_CACHE_KEY }}-source
    - name: Restore glog source from cache
      id: restore_source_glog
      if: ${{ steps.paths.outputs.glog_SOURCE }}
      uses: actions/cache/restore@v4
      with:
       path: ${{ steps.paths.outputs.glog_SOURCE }}
       key: ${{ steps.paths.outputs.glog_CACHE_KEY }}-source
    - name: Fetch glog
      if: ${{ steps.paths.outputs.glog_SOURCE && ! steps.restore_source_glog.outputs.cache-hit }}
      run: python build/fbcode_builder/getdeps.py fetch --no-tests glog
    - name: Save glog source to cache
      uses: actions/cache/save@v4
      if: ${{ steps.paths.outputs.glog_SOURCE && ! steps.restore_source_glog.outputs.cache-hit }}
      with:
       path: ${{ steps.paths.outputs.glog_SOURCE }}
       key: ${{ steps.paths.outputs.glog_CACHE_KEY }}-source
    - name: Restore googletest source from cache
      id: restore_source_googletest
      if: ${{ steps.paths.outputs.googletest_SOURCE }}
      uses: actions/cache/restore@v4
      with:
       path: ${{ steps.paths.outputs.googletest_SOURCE }}
       key: ${{ steps.paths.outputs.googletest_CACHE_KEY }}-source
    - name: Fetch googletest
      if: ${{ steps.paths.outputs.googletest_SOURCE && ! steps.restore_source_googletest.outputs.cache-hit }}
      run: python build/fbcode_builder/getdeps.py fetch --no-tests googletest
    - name: Save googletest source to cache
      uses: actions/cache/save@v4
      if: ${{ steps.paths.outputs.googletest_SOURCE && ! steps.restore_source_googletest.outputs.cache-hit }}
      with:
       path: ${{ steps.paths.outputs.googletest_SOURCE }}
       key: ${{ steps.paths.outputs.googletest_CACHE_KEY }}-source
    - name: Restore libdwarf source from cache
      id: restore_source_libdwarf
      if: ${{ steps.paths.outputs.libdwarf_SOURCE }}
      uses: actions/cache/restore@v4
      with:
       path: ${{ steps.paths.outputs.libdwarf_SOURCE }}
       key: ${{ steps.paths.outputs.libdwarf_CACHE_KEY }}-source
    - name: Fetch libdwarf
      if: ${{ steps.paths.outputs.libdwarf_SOURCE && ! steps.restore_source_libdwarf.outputs.cache-hit }}
      run: python build/fbcode_builder/getdeps.py fetch --no-tests libdwarf
    - name: Save libdwarf source to cache
      uses: actions/cache/save@v4
      if: ${{ steps.paths.outputs.libdwarf_SOURCE && ! steps.restore_source_libdwarf.outputs.cache-hit }}
      with:
       path: ${{ steps.paths.outputs.libdwarf_SOURCE }}
       key: ${{ steps.paths.outputs.libdwarf_CACHE_KEY }}-source
    - name: Restore lz4 source from cache
      id: restore_source_lz4
      if: ${{ steps.paths.outputs.lz4_SOURCE }}
      uses: actions/cache/restore@v4
      with:
       path: ${{ steps.paths.outputs.lz4_SOURCE }}
       key: ${{ steps.paths.outputs.lz4_CACHE_KEY }}-source
    - name: Fetch lz4
      if: ${{ steps.paths.outputs.lz4_SOURCE && ! steps.restore_source_lz4.outputs.cache-hit }}
      run: python build/fbcode_builder/getdeps.py fetch --no-tests lz4
    - name: Save lz4 source to cache
      uses: actions/cache/save@v4
      if: ${{ steps.paths.outputs.lz4_SOURCE && ! steps.restore_source_lz4.outputs.cache-hit }}
      with:
       path: ${{ steps.paths.outputs.lz4_SOURCE }}
       key: ${{ steps.paths.outputs.lz4_CACHE_KEY }}-source
    - name: Restore snappy source from cache
      id: restore_source_snappy
      if: ${{ steps.paths.outputs.snappy_SOURCE }}
      uses: actions/cache/restore@v4
      with:
       path: ${{ steps.paths.outputs.snappy_SOURCE }}
       key: ${{ steps.paths.outputs.snappy_CACHE_KEY }}-source
    - name: Fetch snappy
      if: ${{ steps.paths.outputs.snappy_SOURCE && ! steps.restore_source_snappy.outputs.cache-hit }}
      run: python build/fbcode_builder/getdeps.py fetch --no-tests snappy
    - name: Save snappy source to cache
      uses: actions/cache/save@v4
      if: ${{ steps.paths.outputs.snappy_SOURCE && ! steps.restore_source_snappy.outputs.cache-hit }}
      with:
       path: ${{ steps.paths.outputs.snappy_SOURCE }}
       key: ${{ steps.paths.outputs.snappy_CACHE_KEY }}-source
    - name: Restore zlib source from cache
      id: restore_source_zlib
      if: ${{ steps.paths.outputs.zlib_SOURCE }}
      uses: actions/cache/restore@v4
      with:
       path: ${{ steps.paths.outputs.zlib_SOURCE }}
       key: ${{ steps.paths.outputs.zlib_CACHE_KEY }}-source
    - name: Fetch zlib
      if: ${{ steps.paths.outputs.zlib_SOURCE && ! steps.restore_source_zlib.outputs.cache-hit }}
      run: python build/fbcode_builder/getdeps.py fetch --no-tests zlib
    - name: Save zlib source to cache
      uses: actions/cache/save@v4
      if: ${{ steps.paths.outputs.zlib_SOURCE && ! steps.restore_source_zlib.outputs.cache-hit }}
      with:
       path: ${{ steps.paths.outputs.zlib_SOURCE }}
       key: ${{ steps.paths.outputs.zlib_CACHE_KEY }}-source
    - name: Restore zstd source from cache
      id: restore_source_zstd
      if: ${{ steps.paths.outputs.zstd_SOURCE }}
      uses: actions/cache/restore@v4
      with:
       path: ${{ steps.paths.outputs.zstd_SOURCE }}
       key: ${{ steps.paths.outputs.zstd_CACHE_KEY }}-source
    - name: Fetch zstd
      if: ${{ steps.paths.outputs.zstd_SOURCE && ! steps.restore_source_zstd.outputs.cache-hit }}
      run: python build/fbcode_builder/getdeps.py fetch --no-tests zstd
    - name: Save zstd source to cache
      uses: actions/cache/save@v4
      if: ${{ steps.paths.outputs.zstd_SOURCE && ! steps.restore_source_zstd.outputs.cache-hit }}
      with:
       path: ${{ steps.paths.outputs.zstd_SOURCE }}
       key: ${{ steps.paths.outputs.zstd_CACHE_KEY }}-source
    - name: Restore jom source from cache
      id: restore_source_jom
      if: ${{ steps.paths.outputs.jom_SOURCE }}
      uses: actions/cache/restore@v4
      with:
       path: ${{ steps.paths.outputs.jom_SOURCE }}
       key: ${{ steps.paths.outputs.jom_CACHE_KEY }}-source
    - name: Fetch jom
      if: ${{ steps.paths.outputs.jom_SOURCE && ! steps.restore_source_jom.outputs.cache-hit }}
      run: python build/fbcode_builder/getdeps.py fetch --no-tests jom
    - name: Save jom source to cache
      uses: actions/cache/save@v4
      if: ${{ steps.paths.outputs.jom_SOURCE && ! steps.restore_source_jom.outputs.cache-hit }}
      with:
       path: ${{ steps.paths.outputs.jom_SOURCE }}
       key: ${{ steps.paths.outputs.jom_CACHE_KEY }}-source
    - name: Restore perl source from cache
      id: restore_source_perl
      if: ${{ steps.paths.outputs.perl_SOURCE }}
      uses: actions/cache/restore@v4
      with:
       path: ${{ steps.paths.outputs.perl_SOURCE }}
       key: ${{ steps.paths.outputs.perl_CACHE_KEY }}-source
    - name: Fetch perl
      if: ${{ steps.paths.outputs.perl_SOURCE && ! steps.restore_source_perl.outputs.cache-hit }}
      run: python build/fbcode_builder/getdeps.py fetch --no-tests perl
    - name: Save perl source to cache
      uses: actions/cache/save@v4
      if: ${{ steps.paths.outputs.perl_SOURCE && ! steps.restore_source_perl.outputs.cache-hit }}
      with:
       path: ${{ steps.paths.outputs.perl_SOURCE }}
       key: ${{ steps.paths.outputs.perl_CACHE_KEY }}-source
    - name: Restore openssl source from cache
      id: restore_source_openssl
      if: ${{ steps.paths.outputs.openssl_SOURCE }}
      uses: actions/cache/restore@v4
      with:
       path: ${{ steps.paths.outputs.openssl_SOURCE }}
       key: ${{ steps.paths.outputs.openssl_CACHE_KEY }}-source
    - name: Fetch openssl
      if: ${{ steps.paths.outputs.openssl_SOURCE && ! steps.restore_source_openssl.outputs.cache-hit }}
      run: python build/fbcode_builder/getdeps.py fetch --no-tests openssl
    - name: Save openssl source to cache
      uses: actions/cache/save@v4
      if: ${{ steps.paths.outputs.openssl_SOURCE && ! steps.restore_source_openssl.outputs.cache-hit }}
      with:
       path: ${{ steps.paths.outputs.openssl_SOURCE }}
       key: ${{ steps.paths.outputs.openssl_CACHE_KEY }}-source
    - name: Restore libevent source from cache
      id: restore_source_libevent
      if: ${{ steps.paths.outputs.libevent_SOURCE }}
      uses: actions/cache/restore@v4
      with:
       path: ${{ steps.paths.outputs.libevent_SOURCE }}
       key: ${{ steps.paths.outputs.libevent_CACHE_KEY }}-source
    - name: Fetch libevent
      if: ${{ steps.paths.outputs.libevent_SOURCE && ! steps.restore_source_libevent.outputs.cache-hit }}
      run: python build/fbcode_builder/getdeps.py fetch --no-tests libevent
    - name: Save libevent source to cache
      uses: actions/cache/save@v4
      if: ${{ steps.paths.outputs.libevent_SOURCE && ! steps.restore_source_libevent.outputs.cache-hit }}
      with:
       path: ${{ steps.paths.outputs.libevent_SOURCE }}
       key: ${{ steps.paths.outputs.libevent_CACHE_KEY }}-source
    - name: Restore folly source from cache
      id: restore_source_folly
      if: ${{ steps.paths.outputs.folly_SOURCE }}
      uses: actions/cache/restore@v4
      with:
       path: ${{ steps.paths.outputs.folly_SOURCE }}
       key: ${{ steps.paths.outputs.folly_CACHE_KEY }}-source
    - name: Fetch folly
      if: ${{ steps.paths.outputs.folly_SOURCE && ! steps.restore_source_folly.outputs.cache-hit }}
      run: python build/fbcode_builder/getdeps.py fetch --no-tests folly
    - name: Save folly source to cache
      uses: actions/cache/save@v4
      if: ${{ steps.paths.outputs.folly_SOURCE && ! steps.restore_source_folly.outputs.cache-hit }}
      with:
       path: ${{ steps.paths.outputs.folly_SOURCE }}
       key: ${{ steps.paths.outputs.folly_CACHE_KEY }}-source
    - name: Restore liboqs source from cache
      id: restore_source_liboqs
      if: ${{ steps.paths.outputs.liboqs_SOURCE }}
      uses: actions/cache/restore@v4
      with:
       path: ${{ steps.paths.outputs.liboqs_SOURCE }}
       key: ${{ steps.paths.outputs.liboqs_CACHE_KEY }}-source
    - name: Fetch liboqs
      if: ${{ steps.paths.outputs.liboqs_SOURCE && ! steps.restore_source_liboqs.outputs.cache-hit }}
      run: python build/fbcode_builder/getdeps.py fetch --no-tests liboqs
    - name: Save liboqs source to cache
      uses: actions/cache/save@v4
      if: ${{ steps.paths.outputs.liboqs_SOURCE && ! steps.restore_source_liboqs.outputs.cache-hit }}
      with:
       path: ${{ steps.paths.outputs.liboqs_SOURCE }}
       key: ${{ steps.paths.outputs.liboqs_CACHE_KEY }}-source
    - name: Restore libsodium install from cache
      id: restore_install_libsodium
      if: ${{ steps.paths.outputs.libsodium_SOURCE }}
      uses: actions/cache/restore@v4
      with:
       path: ${{ steps.paths.outputs.libsodium_INSTALL }}
       key: ${{ steps.paths.outputs.libsodium_CACHE_KEY }}-install
    - name: Build libsodium
      if: ${{ steps.paths.outputs.libsodium_SOURCE && ! steps.restore_install_libsodium.outputs.cache-hit }}
      run: python build/fbcode_builder/getdeps.py build --no-tests libsodium
    - name: Save libsodium install to cache
      uses: actions/cache/save@v4
      if: ${{ steps.paths.outputs.libsodium_SOURCE && ! steps.restore_install_libsodium.outputs.cache-hit }}
      with:
       path: ${{ steps.paths.outputs.libsodium_INSTALL }}
       key: ${{ steps.paths.outputs.libsodium_CACHE_KEY }}-install
    - name: Restore ninja install from cache
      id: restore_install_ninja
      if: ${{ steps.paths.outputs.ninja_SOURCE }}
      uses: actions/cache/restore@v4
      with:
       path: ${{ steps.paths.outputs.ninja_INSTALL }}
       key: ${{ steps.paths.outputs.ninja_CACHE_KEY }}-install
    - name: Build ninja
      if: ${{ steps.paths.outputs.ninja_SOURCE && ! steps.restore_install_ninja.outputs.cache-hit }}
      run: python build/fbcode_builder/getdeps.py build --no-tests ninja
    - name: Save ninja install to cache
      uses: actions/cache/save@v4
      if: ${{ steps.paths.outputs.ninja_SOURCE && ! steps.restore_install_ninja.outputs.cache-hit }}
      with:
       path: ${{ steps.paths.outputs.ninja_INSTALL }}
       key: ${{ steps.paths.outputs.ninja_CACHE_KEY }}-install
    - name: Restore cmake install from cache
      id: restore_install_cmake
      if: ${{ steps.paths.outputs.cmake_SOURCE }}
      uses: actions/cache/restore@v4
      with:
       path: ${{ steps.paths.outputs.cmake_INSTALL }}
       key: ${{ steps.paths.outputs.cmake_CACHE_KEY }}-install
    - name: Build cmake
      if: ${{ steps.paths.outputs.cmake_SOURCE && ! steps.restore_install_cmake.outputs.cache-hit }}
      run: python build/fbcode_builder/getdeps.py build --no-tests cmake
    - name: Save cmake install to cache
      uses: actions/cache/save@v4
      if: ${{ steps.paths.outputs.cmake_SOURCE && ! steps.restore_install_cmake.outputs.cache-hit }}
      with:
       path: ${{ steps.paths.outputs.cmake_INSTALL }}
       key: ${{ steps.paths.outputs.cmake_CACHE_KEY }}-install
    - name: Restore boost install from cache
      id: restore_install_boost
      if: ${{ steps.paths.outputs.boost_SOURCE }}
      uses: actions/cache/restore@v4
      with:
       path: ${{ steps.paths.outputs.boost_INSTALL }}
       key: ${{ steps.paths.outputs.boost_CACHE_KEY }}-install
    - name: Build boost
      if: ${{ steps.paths.outputs.boost_SOURCE && ! steps.restore_install_boost.outputs.cache-hit }}
      run: python build/fbcode_builder/getdeps.py build --no-tests boost
    - name: Save boost install to cache
      uses: actions/cache/save@v4
      if: ${{ steps.paths.outputs.boost_SOURCE && ! steps.restore_install_boost.outputs.cache-hit }}
      with:
       path: ${{ steps.paths.outputs.boost_INSTALL }}
       key: ${{ steps.paths.outputs.boost_CACHE_KEY }}-install
    - name: Restore double-conversion install from cache
      id: restore_install_double-conversion
      if: ${{ steps.paths.outputs.double-conversion_SOURCE }}
      uses: actions/cache/restore@v4
      with:
       path: ${{ steps.paths.outputs.double-conversion_INSTALL }}
       key: ${{ steps.paths.outputs.double-conversion_CACHE_KEY }}-install
    - name: Build double-conversion
      if: ${{ steps.paths.outputs.double-conversion_SOURCE && ! steps.restore_install_double-conversion.outputs.cache-hit }}
      run: python build/fbcode_builder/getdeps.py build --no-tests double-conversion
    - name: Save double-conversion install to cache
      uses: actions/cache/save@v4
      if: ${{ steps.paths.outputs.double-conversion_SOURCE && ! steps.restore_install_double-conversion.outputs.cache-hit }}
      with:
       path: ${{ steps.paths.outputs.double-conversion_INSTALL }}
       key: ${{ steps.paths.outputs.double-conversion_CACHE_KEY }}-install
    - name: Restore fast_float install from cache
      id: restore_install_fast_float
      if: ${{ steps.paths.outputs.fast_float_SOURCE }}
      uses: actions/cache/restore@v4
      with:
       path: ${{ steps.paths.outputs.fast_float_INSTALL }}
       key: ${{ steps.paths.outputs.fast_float_CACHE_KEY }}-install
    - name: Build fast_float
      if: ${{ steps.paths.outputs.fast_float_SOURCE && ! steps.restore_install_fast_float.outputs.cache-hit }}
      run: python build/fbcode_builder/getdeps.py build --no-tests fast_float
    - name: Save fast_float install to cache
      uses: actions/cache/save@v4
      if: ${{ steps.paths.outputs.fast_float_SOURCE && ! steps.restore_install_fast_float.outputs.cache-hit }}
      with:
       path: ${{ steps.paths.outputs.fast_float_INSTALL }}
       key: ${{ steps.paths.outputs.fast_float_CACHE_KEY }}-install
    - name: Restore fmt install from cache
      id: restore_install_fmt
      if: ${{ steps.paths.outputs.fmt_SOURCE }}
      uses: actions/cache/restore@v4
      with:
       path: ${{ steps.paths.outputs.fmt_INSTALL }}
       key: ${{ steps.paths.outputs.fmt_CACHE_KEY }}-install
    - name: Build fmt
      if: ${{ steps.paths.outputs.fmt_SOURCE && ! steps.restore_install_fmt.outputs.cache-hit }}
      run: python build/fbcode_builder/getdeps.py build --no-tests fmt
    - name: Save fmt install to cache
      uses: actions/cache/save@v4
      if: ${{ steps.paths.outputs.fmt_SOURCE && ! steps.restore_install_fmt.outputs.cache-hit }}
      with:
       path: ${{ steps.paths.outputs.fmt_INSTALL }}
       key: ${{ steps.paths.outputs.fmt_CACHE_KEY }}-install
    - name: Restore gflags install from cache
      id: restore_install_gflags
      if: ${{ steps.paths.outputs.gflags_SOURCE }}
      uses: actions/cache/restore@v4
      with:
       path: ${{ steps.paths.outputs.gflags_INSTALL }}
       key: ${{ steps.paths.outputs.gflags_CACHE_KEY }}-install
    - name: Build gflags
      if: ${{ steps.paths.outputs.gflags_SOURCE && ! steps.restore_install_gflags.outputs.cache-hit }}
      run: python build/fbcode_builder/getdeps.py build --no-tests gflags
    - name: Save gflags install to cache
      uses: actions/cache/save@v4
      if: ${{ steps.paths.outputs.gflags_SOURCE && ! steps.restore_install_gflags.outputs.cache-hit }}
      with:
       path: ${{ steps.paths.outputs.gflags_INSTALL }}
       key: ${{ steps.paths.outputs.gflags_CACHE_KEY }}-install
    - name: Restore glog install from cache
      id: restore_install_glog
      if: ${{ steps.paths.outputs.glog_SOURCE }}
      uses: actions/cache/restore@v4
      with:
       path: ${{ steps.paths.outputs.glog_INSTALL }}
       key: ${{ steps.paths.outputs.glog_CACHE_KEY }}-install
    - name: Build glog
      if: ${{ steps.paths.outputs.glog_SOURCE && ! steps.restore_install_glog.outputs.cache-hit }}
      run: python build/fbcode_builder/getdeps.py build --no-tests glog
    - name: Save glog install to cache
      uses: actions/cache/save@v4
      if: ${{ steps.paths.outputs.glog_SOURCE && ! steps.restore_install_glog.outputs.cache-hit }}
      with:
       path: ${{ steps.paths.outputs.glog_INSTALL }}
       key: ${{ steps.paths.outputs.glog_CACHE_KEY }}-install
    - name: Restore googletest install from cache
      id: restore_install_googletest
      if: ${{ steps.paths.outputs.googletest_SOURCE }}
      uses: actions/cache/restore@v4
      with:
       path: ${{ steps.paths.outputs.googletest_INSTALL }}
       key: ${{ steps.paths.outputs.googletest_CACHE_KEY }}-install
    - name: Build googletest
      if: ${{ steps.paths.outputs.googletest_SOURCE && ! steps.restore_install_googletest.outputs.cache-hit }}
      run: python build/fbcode_builder/getdeps.py build --no-tests googletest
    - name: Save googletest install to cache
      uses: actions/cache/save@v4
      if: ${{ steps.paths.outputs.googletest_SOURCE && ! steps.restore_install_googletest.outputs.cache-hit }}
      with:
       path: ${{ steps.paths.outputs.googletest_INSTALL }}
       key: ${{ steps.paths.outputs.googletest_CACHE_KEY }}-install
    - name: Restore libdwarf install from cache
      id: restore_install_libdwarf
      if: ${{ steps.paths.outputs.libdwarf_SOURCE }}
      uses: actions/cache/restore@v4
      with:
       path: ${{ steps.paths.outputs.libdwarf_INSTALL }}
       key: ${{ steps.paths.outputs.libdwarf_CACHE_KEY }}-install
    - name: Build libdwarf
      if: ${{ steps.paths.outputs.libdwarf_SOURCE && ! steps.restore_install_libdwarf.outputs.cache-hit }}
      run: python build/fbcode_builder/getdeps.py build --no-tests libdwarf
    - name: Save libdwarf install to cache
      uses: actions/cache/save@v4
      if: ${{ steps.paths.outputs.libdwarf_SOURCE && ! steps.restore_install_libdwarf.outputs.cache-hit }}
      with:
       path: ${{ steps.paths.outputs.libdwarf_INSTALL }}
       key: ${{ steps.paths.outputs.libdwarf_CACHE_KEY }}-install
    - name: Restore lz4 install from cache
      id: restore_install_lz4
      if: ${{ steps.paths.outputs.lz4_SOURCE }}
      uses: actions/cache/restore@v4
      with:
       path: ${{ steps.paths.outputs.lz4_INSTALL }}
       key: ${{ steps.paths.outputs.lz4_CACHE_KEY }}-install
    - name: Build lz4
      if: ${{ steps.paths.outputs.lz4_SOURCE && ! steps.restore_install_lz4.outputs.cache-hit }}
      run: python build/fbcode_builder/getdeps.py build --no-tests lz4
    - name: Save lz4 install to cache
      uses: actions/cache/save@v4
      if: ${{ steps.paths.outputs.lz4_SOURCE && ! steps.restore_install_lz4.outputs.cache-hit }}
      with:
       path: ${{ steps.paths.outputs.lz4_INSTALL }}
       key: ${{ steps.paths.outputs.lz4_CACHE_KEY }}-install
    - name: Restore snappy install from cache
      id: restore_install_snappy
      if: ${{ steps.paths.outputs.snappy_SOURCE }}
      uses: actions/cache/restore@v4
      with:
       path: ${{ steps.paths.outputs.snappy_INSTALL }}
       key: ${{ steps.paths.outputs.snappy_CACHE_KEY }}-install
    - name: Build snappy
      if: ${{ steps.paths.outputs.snappy_SOURCE && ! steps.restore_install_snappy.outputs.cache-hit }}
      run: python build/fbcode_builder/getdeps.py build --no-tests snappy
    - name: Save snappy install to cache
      uses: actions/cache/save@v4
      if: ${{ steps.paths.outputs.snappy_SOURCE && ! steps.restore_install_snappy.outputs.cache-hit }}
      with:
       path: ${{ steps.paths.outputs.snappy_INSTALL }}
       key: ${{ steps.paths.outputs.snappy_CACHE_KEY }}-install
    - name: Restore zlib install from cache
      id: restore_install_zlib
      if: ${{ steps.paths.outputs.zlib_SOURCE }}
      uses: actions/cache/restore@v4
      with:
       path: ${{ steps.paths.outputs.zlib_INSTALL }}
       key: ${{ steps.paths.outputs.zlib_CACHE_KEY }}-install
    - name: Build zlib
      if: ${{ steps.paths.outputs.zlib_SOURCE && ! steps.restore_install_zlib.outputs.cache-hit }}
      run: python build/fbcode_builder/getdeps.py build --no-tests zlib
    - name: Save zlib install to cache
      uses: actions/cache/save@v4
      if: ${{ steps.paths.outputs.zlib_SOURCE && ! steps.restore_install_zlib.outputs.cache-hit }}
      with:
       path: ${{ steps.paths.outputs.zlib_INSTALL }}
       key: ${{ steps.paths.outputs.zlib_CACHE_KEY }}-install
    - name: Restore zstd install from cache
      id: restore_install_zstd
      if: ${{ steps.paths.outputs.zstd_SOURCE }}
      uses: actions/cache/restore@v4
      with:
       path: ${{ steps.paths.outputs.zstd_INSTALL }}
       key: ${{ steps.paths.outputs.zstd_CACHE_KEY }}-install
    - name: Build zstd
      if: ${{ steps.paths.outputs.zstd_SOURCE && ! steps.restore_install_zstd.outputs.cache-hit }}
      run: python build/fbcode_builder/getdeps.py build --no-tests zstd
    - name: Save zstd install to cache
      uses: actions/cache/save@v4
      if: ${{ steps.paths.outputs.zstd_SOURCE && ! steps.restore_install_zstd.outputs.cache-hit }}
      with:
       path: ${{ steps.paths.outputs.zstd_INSTALL }}
       key: ${{ steps.paths.outputs.zstd_CACHE_KEY }}-install
    - name: Restore jom install from cache
      id: restore_install_jom
      if: ${{ steps.paths.outputs.jom_SOURCE }}
      uses: actions/cache/restore@v4
      with:
       path: ${{ steps.paths.outputs.jom_INSTALL }}
       key: ${{ steps.paths.outputs.jom_CACHE_KEY }}-install
    - name: Build jom
      if: ${{ steps.paths.outputs.jom_SOURCE && ! steps.restore_install_jom.outputs.cache-hit }}
      run: python build/fbcode_builder/getdeps.py build --no-tests jom
    - name: Save jom install to cache
      uses: actions/cache/save@v4
      if: ${{ steps.paths.outputs.jom_SOURCE && ! steps.restore_install_jom.outputs.cache-hit }}
      with:
       path: ${{ steps.paths.outputs.jom_INSTALL }}
       key: ${{ steps.paths.outputs.jom_CACHE_KEY }}-install
    - name: Restore perl install from cache
      id: restore_install_perl
      if: ${{ steps.paths.outputs.perl_SOURCE }}
      uses: actions/cache/restore@v4
      with:
       path: ${{ steps.paths.outputs.perl_INSTALL }}
       key: ${{ steps.paths.outputs.perl_CACHE_KEY }}-install
    - name: Build perl
      if: ${{ steps.paths.outputs.perl_SOURCE && ! steps.restore_install_perl.outputs.cache-hit }}
      run: python build/fbcode_builder/getdeps.py build --no-tests perl
    - name: Save perl install to cache
      uses: actions/cache/save@v4
      if: ${{ steps.paths.outputs.perl_SOURCE && ! steps.restore_install_perl.outputs.cache-hit }}
      with:
       path: ${{ steps.paths.outputs.perl_INSTALL }}
       key: ${{ steps.paths.outputs.perl_CACHE_KEY }}-install
    - name: Restore openssl install from cache
      id: restore_install_openssl
      if: ${{ steps.paths.outputs.openssl_SOURCE }}
      uses: actions/cache/restore@v4
      with:
       path: ${{ steps.paths.outputs.openssl_INSTALL }}
       key: ${{ steps.paths.outputs.openssl_CACHE_KEY }}-install
    - name: Build openssl
      if: ${{ steps.paths.outputs.openssl_SOURCE && ! steps.restore_install_openssl.outputs.cache-hit }}
      run: python build/fbcode_builder/getdeps.py build --no-tests openssl
    - name: Save openssl install to cache
      uses: actions/cache/save@v4
      if: ${{ steps.paths.outputs.openssl_SOURCE && ! steps.restore_install_openssl.outputs.cache-hit }}
      with:
       path: ${{ steps.paths.outputs.openssl_INSTALL }}
       key: ${{ steps.paths.outputs.openssl_CACHE_KEY }}-install
    - name: Restore libevent install from cache
      id: restore_install_libevent
      if: ${{ steps.paths.outputs.libevent_SOURCE }}
      uses: actions/cache/restore@v4
      with:
       path: ${{ steps.paths.outputs.libevent_INSTALL }}
       key: ${{ steps.paths.outputs.libevent_CACHE_KEY }}-install
    - name: Build libevent
      if: ${{ steps.paths.outputs.libevent_SOURCE && ! steps.restore_install_libevent.outputs.cache-hit }}
      run: python build/fbcode_builder/getdeps.py build --no-tests libevent
    - name: Save libevent install to cache
      uses: actions/cache/save@v4
      if: ${{ steps.paths.outputs.libevent_SOURCE && ! steps.restore_install_libevent.outputs.cache-hit }}
      with:
       path: ${{ steps.paths.outputs.libevent_INSTALL }}
       key: ${{ steps.paths.outputs.libevent_CACHE_KEY }}-install
    - name: Restore folly install from cache
      id: restore_install_folly
      if: ${{ steps.paths.outputs.folly_SOURCE }}
      uses: actions/cache/restore@v4
      with:
       path: ${{ steps.paths.outputs.folly_INSTALL }}
       key: ${{ steps.paths.outputs.folly_CACHE_KEY }}-install
    - name: Build folly
      if: ${{ steps.paths.outputs.folly_SOURCE && ! steps.restore_install_folly.outputs.cache-hit }}
      run: python build/fbcode_builder/getdeps.py build --no-tests folly
    - name: Save folly install to cache
      uses: actions/cache/save@v4
      if: ${{ steps.paths.outputs.folly_SOURCE && ! steps.restore_install_folly.outputs.cache-hit }}
      with:
       path: ${{ steps.paths.outputs.folly_INSTALL }}
       key: ${{ steps.paths.outputs.folly_CACHE_KEY }}-install
    - name: Restore liboqs install from cache
      id: restore_install_liboqs
      if: ${{ steps.paths.outputs.liboqs_SOURCE }}
      uses: actions/cache/restore@v4
      with:
       path: ${{ steps.paths.outputs.liboqs_INSTALL }}
       key: ${{ steps.paths.outputs.liboqs_CACHE_KEY }}-install
    - name: Build liboqs
      if: ${{ steps.paths.outputs.liboqs_SOURCE && ! steps.restore_install_liboqs.outputs.cache-hit }}
      run: python build/fbcode_builder/getdeps.py build --no-tests liboqs
    - name: Save liboqs install to cache
      uses: actions/cache/save@v4
      if: ${{ steps.paths.outputs.liboqs_SOURCE && ! steps.restore_install_liboqs.outputs.cache-hit }}
      with:
       path: ${{ steps.paths.outputs.liboqs_INSTALL }}
       key: ${{ steps.paths.outputs.liboqs_CACHE_KEY }}-install
    - name: Build fizz
      run: python build/fbcode_builder/getdeps.py build --src-dir=. fizz 
    - name: Copy artifacts
      run: python build/fbcode_builder/getdeps.py fixup-dyn-deps --src-dir=. fizz _artifacts/windows  --final-install-prefix /usr/local
    - uses: actions/upload-artifact@v4
      with:
        name: fizz
        path: _artifacts
    - name: Test fizz
      run: python build/fbcode_builder/getdeps.py test --src-dir=. fizz 
